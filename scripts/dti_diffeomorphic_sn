#!/bin/bash
#============================================================================
#
#  Program:     DTI ToolKit (DTI-TK)
#  Module:      $RCSfile: dti_diffeomorphic_sn,v $
#  Language:    bash
#  Date:        $Date: 2011/12/21 20:39:22 $
#  Version:     $Revision: 1.1.1.1 $
#
#  Copyright (c) Gary Hui Zhang (garyhuizhang@gmail.com).
#  All rights reserverd.
#
#  DTI-TK is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  DTI-TK is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with DTI-TK.  If not, see <http://www.gnu.org/licenses/>.
#============================================================================

#
# deformable alignment of a set of DTI volumes to some template
#

# check DTITK_ROOT variable
if [ -z "${DTITK_ROOT}" ]
then
	echo "Environment variable DTITK_ROOT is not defined"
	exit 1
fi

# source dtitk_common.sh
. ${DTITK_ROOT}/scripts/dtitk_common.sh

if [ $# -lt 5 ]
then
	echo "Deformable alignment of a set of DTI volumes to a DTI template"
	echo "Usage: `basename $0` template subject_list_file mask no_of_iter ftol"
	exit 1
fi

template=$1
subjects=$2
mask=$3
no_of_iter=$4
ftol=$5
jid=ddr_"$$"
completed=0

while [ "$completed" -eq 0 ]
do
	for subj in `cat ${subjects}`
	do
		echo $subj
		pref=`getTVPrefix $subj`
        	wdir=`pwd`
		if [ "${DTITK_USE_QSUB}" -eq 1 ]
		then
			jname=${jid}_${subj}
			jname=`echo $jname | sed -e 's/\//_/g'`
			echo > ${pref}.submit
			echo "universe = vanilla" >> ${pref}.submit
			echo "initialdir = ${wdir}">> ${pref}.submit
			echo "getenv = True" >> ${pref}.submit
			echo "executable = ${DTITK_ROOT}/scripts/dti_diffeomorphic_reg" >> ${pref}.submit
			echo "arguments = ${template} ${subj} ${mask} 1 ${no_of_iter} ${ftol}" >> ${pref}.submit
			echo "output = ${pref}.out" >> ${pref}.submit
 			echo "error = ${pref}.err" >> ${pref}.submit
			echo "log = ${pref}.log" >> ${pref}.submit
			echo "queue" >> ${pref}.submit
			condor_submit ${pref}.submit
		else
			cmd="${DTITK_ROOT}/scripts/dti_diffeomorphic_reg"
			${cmd} ${template} ${subj} ${mask} 1 ${no_of_iter} ${ftol}
			completed=1
		fi
	done

	if [ "${DTITK_USE_QSUB}" -eq 1 ]
	then
		condor_wait ${pref}.log
		ls *dtitk_aff.nii.gz > subj_aff_diffeo_todo.txt 
		subjectstodo=`cat subj_aff_diffeo_todo.txt | wc -l`
		ls *dtitk_aff_diffeo.df.nii.gz > subj_aff_diffeo_done.txt 
		subjectsdone=`cat subj_aff_diffeo_done.txt | wc -l`
		if [ "$subjectstodo" -eq "$subjectsdone" ]
		then 
			completed=1
			echo "done"
		else
			grep -Fxv -f subj_aff_diffeo_done.txt diffeo.txt > subj_aff_diffeo_notdone.txt
			toredo=`cat subj_aff_diffeo_notdone.txt | wc -l`
			echo "$toredo subjects to redo on the grid"
			cat subj_aff_diffeo_notdone.txt | rev | cut -d "_" -f4- | rev | awk '{print $1"_dtitk_aff.nii.gz"}' > subj_aff_todo.txt
			subjects="subj_aff_todo.txt"
		fi
	fi
done
